package com.redlimerl.mcsrlauncher.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

@SuppressWarnings("SameParameterValue")
public class MainForm extends JFrame {
    public JPanel launcherMenu;
    private JPanel bottomField;
    public JScrollPane instanceScrollPane;
    public JPanel mainPanel;
    private JSeparator topSeparator;
    public JButton accountButton;
    public JButton createInstanceButton;
    public JButton settingsButton;
    public JButton discordButton;
    public JButton patreonButton;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        launcherMenu = new JPanel();
        launcherMenu.setLayout(new FlowLayout(FlowLayout.LEFT, 3, 0));
        mainPanel.add(launcherMenu, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 1, false));
        accountButton = new JButton();
        accountButton.setBorderPainted(false);
        accountButton.setContentAreaFilled(false);
        accountButton.setIcon(new ImageIcon(getClass().getResource("/icons/steve.png")));
        accountButton.setIconTextGap(8);
        accountButton.setMargin(new Insets(5, 10, 5, 10));
        accountButton.setOpaque(false);
        accountButton.setRequestFocusEnabled(false);
        accountButton.setText("account.accounts");
        accountButton.setVerticalAlignment(0);
        accountButton.setVerticalTextPosition(0);
        accountButton.putClientProperty("html.disable", Boolean.FALSE);
        launcherMenu.add(accountButton);
        createInstanceButton = new JButton();
        createInstanceButton.setBorderPainted(false);
        createInstanceButton.setContentAreaFilled(false);
        createInstanceButton.setDoubleBuffered(false);
        createInstanceButton.setEnabled(true);
        createInstanceButton.setFocusPainted(true);
        createInstanceButton.setHorizontalTextPosition(11);
        createInstanceButton.setIcon(new ImageIcon(getClass().getResource("/icons/instance.png")));
        createInstanceButton.setIconTextGap(6);
        createInstanceButton.setMargin(new Insets(5, 10, 5, 10));
        createInstanceButton.setOpaque(false);
        createInstanceButton.setRequestFocusEnabled(false);
        createInstanceButton.setText("instance.new");
        createInstanceButton.setVerticalAlignment(0);
        createInstanceButton.setVerticalTextPosition(0);
        launcherMenu.add(createInstanceButton);
        settingsButton = new JButton();
        settingsButton.setBorderPainted(false);
        settingsButton.setContentAreaFilled(false);
        settingsButton.setDoubleBuffered(false);
        settingsButton.setEnabled(true);
        settingsButton.setFocusPainted(true);
        settingsButton.setHorizontalTextPosition(11);
        settingsButton.setIcon(new ImageIcon(getClass().getResource("/icons/settings.png")));
        settingsButton.setIconTextGap(6);
        settingsButton.setMargin(new Insets(5, 10, 5, 10));
        settingsButton.setOpaque(false);
        settingsButton.setRequestFocusEnabled(false);
        settingsButton.setText("text.settings");
        settingsButton.setVerticalAlignment(0);
        settingsButton.setVerticalTextPosition(0);
        launcherMenu.add(settingsButton);
        discordButton = new JButton();
        discordButton.setBorderPainted(false);
        discordButton.setContentAreaFilled(false);
        discordButton.setDoubleBuffered(false);
        discordButton.setEnabled(true);
        discordButton.setFocusPainted(true);
        discordButton.setHorizontalTextPosition(11);
        discordButton.setIcon(new ImageIcon(getClass().getResource("/icons/discord.png")));
        discordButton.setIconTextGap(6);
        discordButton.setMargin(new Insets(5, 10, 5, 10));
        discordButton.setOpaque(false);
        discordButton.setRequestFocusEnabled(false);
        discordButton.setText("text.join_discord_server");
        discordButton.setVerticalAlignment(0);
        discordButton.setVerticalTextPosition(0);
        launcherMenu.add(discordButton);
        patreonButton = new JButton();
        patreonButton.setBorderPainted(false);
        patreonButton.setContentAreaFilled(false);
        patreonButton.setDoubleBuffered(false);
        patreonButton.setEnabled(true);
        patreonButton.setFocusPainted(true);
        patreonButton.setHorizontalTextPosition(11);
        patreonButton.setIcon(new ImageIcon(getClass().getResource("/icons/patreon.png")));
        patreonButton.setIconTextGap(6);
        patreonButton.setMargin(new Insets(5, 10, 5, 10));
        patreonButton.setOpaque(false);
        patreonButton.setRequestFocusEnabled(false);
        patreonButton.setText("text.support_us");
        patreonButton.setVerticalAlignment(0);
        patreonButton.setVerticalTextPosition(0);
        launcherMenu.add(patreonButton);
        bottomField = new JPanel();
        bottomField.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(bottomField, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 12, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("message.instance_list_guide");
        bottomField.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(-1, 20), null, 0, false));
        instanceScrollPane = new JScrollPane();
        instanceScrollPane.setHorizontalScrollBarPolicy(31);
        instanceScrollPane.setVerticalScrollBarPolicy(20);
        mainPanel.add(instanceScrollPane, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        topSeparator = new JSeparator();
        mainPanel.add(topSeparator, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
